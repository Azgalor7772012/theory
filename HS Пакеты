-->Пакеты - механизм группировки классов, похожих по смыслу или служащих для одной цели.
Они позволяют нам:
1)Сгруппировать связанные классы вместе, что упрощает определение того, где находится определенный класс;
2)Избегайте конфликтующих имен классов т.к в полное название класса входит название пакета. Поэтому если
2 класса с одинаковым названием в разных пакетах, то полное название у них разное;
3)Управлять доступом к классам и членам с помощью модификаторов доступа.

Классы, объявленные внутри пакета, имеют специальное ключевое слово package в начале файла.
package org.company.webapp.data;

public class User {
}

--> Если 2 класса находятся в одном пакете, то, чтобы использовать объект одного класса в другом, достаточно
создать его экземпляр. НО если 2 класса лежат в разных пакетах, то для того, чтобы в одном использовать другой,
нужно импортировать его:
org.hyperskill.java.packages.theory.p1.A // Класс А в пакете p1
org.hyperskill.java.packages.theory.p2.B // Класс B в пакете p2
Выше указаны полные имена классов для наглядности.


package org.hyperskill.java.packages.theory.p1;  // current package
import org.hyperskill.java.packages.theory.p2.B; // it's required to use the import

public class A {

    public static void method() {

        B b = new B();
    }
}

Еще мы можем импортировать сразу все классы пакета, например из пакета(util) с классом Scanner импортируем
все методы пакета:
import java.util.* - делается это с помощью *

--> Есть пакет Java, который всегда импортируется автоматически. Он содержит такие классы, как:
String, System, Long, Integer, NullPointerException и другие.


-->Мы также можем импортировать статические члены (методы и поля) класса внутри другого класса.
Если мы пишем звездочку * в операторе импорта, нам не нужно писать имя импортируемого класса перед
вызовом статических методов или чтением статических полей.

package org.hyperskill.java.packages.theory;

import static java.util.Arrays.*; // instead of the statement "import java.util.Arrays;"

public class Main {

    public static void main(String[] args) {
        int[] numbers = { 10, 4, 5, 47, 5, 12 }; // an array

        sort(numbers); // instead of writing Arrays.sort(...)

        int[] copy = copyOf(numbers, numbers.length); // instead of writing Arrays.copyOf(...)
    }
}

--> Если мы не напишем оператор пакета перед определением нашего класса, он будет помещен внутри
default package.  У этого пакета есть большой недостаток — классы, расположенные внутри него, нельзя
импортировать в классы, расположенные внутри именованных пакетов.

--> Для классов мы можем использовать только 2 модификатора:
1)Package-private (ничего не писать перед названием класса) - виден только в пакете класса.
2)Public - виден везде.