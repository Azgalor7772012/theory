Все объекты бывают 2 типов:
1)Mutable(изменяемые)
2)Immutable(неизменяемые)

--> Примером Immutable objects является класс String. Класс String неизменяемый и если мы захотим использо-
ваться какой-то метод класса String, то нам придется создать новую переменную и записать в нее изменения.
То есть методы, вызываемые на объекте String просто возвращают новую строку:
String x = "hello";
x = x.toUpperCase(); // Пересоздали x и сказали, что все буквы теперь заглавные.

--> Класс StringBuilder такой же, как и класс String, но он Mutable(изменяемый).
Сделано это для того, чтобы ускорить время выполнение программ. Рассмотрим пример
String s1 = "p";
String s2 = "i";
String s3 = "d";
String allS = s1 + s2+ s3
Здесь Java сначала складывает строки s1 и s2, создавая еще одну строку равную s1 + s2, после он к новой
строке добавляет строку s3, создавая снова еще одну строку, Таким образом мы создали 2 доп.строки и очень
замедлили программу, что не есть хорошо.

Синтаксис:
StringBuilder ourString = StringBuilder("Hello");

Чтобы вывести строку на экран:
System.out.println(ourString.toString())

Чтобы произвести такую же операцию по конкатенации строк:
ourString.append("New String");
Теперь Java не создает новую ячейку памяти в heat memory, она добавляет к имеющейся новые значения.