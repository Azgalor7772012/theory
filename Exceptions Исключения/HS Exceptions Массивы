-->У массивов есть несколько самых распространенных типов исключений:

1. NullPointerException:
В этом случае как и со строками оператором ==/!= проверяем равен ли массив null:

int[] numbers = null;
int size = numbers.length; // It throws NPE
Решение:
int size = numbers == null ? 0 : numbers.length;


2. NegativeArraySizeException:
Если вы попытаетесь создать массив с отрицательным размером, ваш код будет успешно скомпилирован, но эта строка выдаст ошибку NegativeArraySizeExceptionпри выполнении.

int negSize = -1;
int[] numbers = new int[negSize]; // an exception

Решение:
Не использовать числа меньше нуля, делать проверку на то, чтобы они были >0.

3.ArrayIndexOutOfBoundsException:
Вызвано попыткой доступа к несуществующему элементу массива.

int[] array = { 1, 2, 3 }; // an array of ints
int n1 = array[2]; // n1 is 3
int n2 = array[3]; // Exception

Решение:
Чтобы избежать этого исключения, нужно проверять принадлежит ли индекс массива
его диапазону [0, arr.length – 1]:

int index = scanner.nextInt();
        if (index < 0 || index > hardCodedArray.length - 1) {
            System.out.println("The index is out of bounds.");
        } else {
            System.out.println(hardCodedArray[index]);
        }