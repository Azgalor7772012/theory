->this и super - это два специальных ключевых слова в Java, которые представляют соответственно
текущий экземпляр класса и его супер класса.

1)С помощью this(args), super(args) в конструкторе можно вызывать другой конструктор своего или
родительского класса соответственно

2)C помощью this и super в Java используются для обращения к переменным экземпляра класса и его
родителя.

Вообще-то, к ним можно обращаться и без префиксов super и this, но только если в текущем блоке
такие переменные не перекрываются другими переменными, т.е. если в нем нет локальных переменных
с такими же именами, в противном же случае использовать имена с префиксами придется обязательно

-> Тонкости:
1) this и super — это нестатические переменные, соответственно их нельзя использовать в статическом
контексте(в статических методах,например).
2) переменным this и super нельзя присвоить другие значения т.к они объявлены final
this = 12; //НЕ РАБОТАЕТ

2) Если вызывать конструкторы с помощью this и super, то они должны стоять на первом месте в методе,
также отсюда следует, что в одном конструкторе не может быть и this() и super()

3)При вызове конструктора из конструктора сначала отработает всю свою программу последний вызванный
конструктор, потом предпоследний и так далее до первого, т.к ключевым словом this()/super() мы
переходим на другой конструктор и начинаем выполнять его код, а потом возвращаемся на первоначальный
конструктор

4)Во Внутренних классах, где с их помощью очень удобно ссылаться на внешний класс, используя форму
записи Outer.this для его текущего экземпляра и Outer.super — для его родителя.
Где Outer - имя внешнего класса.

->Разница this & super:
1)Переменная this ссылается на текущий экземпляр класса, а переменная super на текущий экземпляр
родительского класса
2)Каждый конструктор дочернего класса перед началом своей работы неявно вызывает конструктор родительского
класса с помощью super(), при этом мы все еще можем вызвать другие конструкторы
