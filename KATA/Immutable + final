-Если объявить класс/метод/переменную ключевым словом final, то они станут неизменяемыми.

1)Если->в объявлении класса стоит модификатор final, это значит, что от данного класса нельзя наследоваться.
2)Если класс объявлен как final, все его методы тоже становятся final.
3)Если для метода указан модификатор final — этот метод нельзя переопределить.
4)Final-переменныe - Константы. Первое присвоенное им значение нельзя поменять. Константы принято писать
с большой буквы и разделять слова нижним подчеркиванием(_).
4)Final ссылочный тип означает, что нельзя будет изменить ссылку на данный объект, но состояние объекта
изменить будет можно
*Также слово final можно использовать в объявлении параметров метода.

->Самый известный неизменяемый объект - String.
Также все классы обертки относятся к неизменяемым объектам.

-> Здесь же стоит отметить String pool:
Если строка, созданная при помощи конструктора хранится непосредственно в куче, то строка, созданная как
строковый литерал, уже хранится в специальном месте кучи — в так называемом пуле строк (string pool).
В нем сохраняются исключительно уникальные значения строковых литералов, а не все строки подряд. Процесс
помещения строк в пул называется интернирование
Когда мы объявляем переменную типа String и присваиваем ей строковый литерал, то JVM обращается в пул строк
и ищет там такое же значение. Если пул содержит необходимое значение, то компилятор просто возвращает
ссылку на соответствующий адрес строки без выделения дополнительной памяти. Если значение не найдено,
то новая строка будет интернирована, а ссылка на нее возвращена и присвоена переменной.

String str1 = "TopJava";
        String str2 = "TopJava";

        System.out.println("Строка 1 равна строке 2? " + (str1 == str2)); // Проверяем ссылки
        //Вывод: Строка 1 равна строке 2? true
    }
}

--> Делая поля класса приватными и не создавая методов для изменения полей мы делаем объект неизменяемым.